{"ast":null,"code":"import axios from \"axios\";\nimport create from \"zustand\";\nexport const useTransactionStore = create(set => ({\n  transaction: {},\n  fetchUserTransaction: async () => {\n    console.log(localStorage.getItem(\"id_token\"));\n    let requestInstance = axios.create({\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"id_token\")}`\n      }\n    });\n    try {\n      const response = await requestInstance.get(\"http://localhost:8080/transactions\");\n      console.log(response);\n      set(state => ({\n        userProfiles: state = response.data.data.data\n      }));\n    } catch (error) {}\n  },\n  transactionList: [],\n  fetchUserTransactions: async () => {\n    let requestInstance = axios.create({\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"id_token\")}`\n      }\n    });\n    try {\n      const response = await requestInstance.get(\"http://localhost:8080/transactions\");\n      set(state => ({\n        transactionList: state = response.data.data.data\n      }));\n    } catch (error) {}\n  },\n  postUserTransferTransactions: async payload => {\n    let requestInstance = axios.create({\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"id_token\")}`\n      }\n    });\n    try {\n      const response = await requestInstance.post(\"http://localhost:8080/transactions/transfer\", {\n        to: payload.to,\n        amount: parseInt(payload.amount.toString()),\n        description: payload.description\n      });\n      console.log(response);\n    } catch (error) {\n      console.log(error);\n    }\n  },\n  topUpResponse: {},\n  postUserTopUpTransactions: async payload => {\n    let requestInstance = axios.create({\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"id_token\")}`\n      }\n    });\n    try {\n      const response = await requestInstance.post(\"http://localhost:8080/transactions/top-up\", {\n        amount: payload.amount,\n        source_of_fund_id: payload.source_of_fund_id\n      });\n      console.log(response.data);\n      set(state => ({\n        topUpResponse: state = response.data.data\n      }));\n    } catch (error) {\n      console.log(error);\n      alert(\"Invalid amount (min. 50000)\");\n    }\n  },\n  userProfiles: {},\n  fetchUserProfiles: async () => {\n    console.log(localStorage.getItem(\"id_token\"));\n    let requestInstance = axios.create({\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"id_token\")}`\n      }\n    });\n    try {\n      const response = await requestInstance.get(\"https://localhost:8080/api/user/profile\");\n      console.log(response);\n      set(state => ({\n        userProfiles: state = response.data.data\n      }));\n    } catch (error) {}\n  }\n}));","map":{"version":3,"names":["axios","create","useTransactionStore","set","transaction","fetchUserTransaction","console","log","localStorage","getItem","requestInstance","headers","Authorization","response","get","state","userProfiles","data","error","transactionList","fetchUserTransactions","postUserTransferTransactions","payload","post","to","amount","parseInt","toString","description","topUpResponse","postUserTopUpTransactions","source_of_fund_id","alert","fetchUserProfiles"],"sources":["/home/rizky.ashari/Documents/final-project/final-project-frontend/src/store.ts"],"sourcesContent":["import axios from \"axios\";\nimport create from \"zustand\";\nimport {\n  IProfiles,\n  ITopUp,\n  ITopUpTransaction,\n  ITransactions,\n  ITransferTransaction,\n} from \"./interface\";\n\ninterface TransactionState {\n  transaction: ITransactions;\n  transactionList: Array<ITransactions>;\n  userProfiles: IProfiles;\n  topUpResponse: ITopUp;\n  fetchUserTransaction: () => void;\n  fetchUserTransactions: () => void;\n  fetchUserProfiles: () => void;\n  postUserTransferTransactions: (payload: ITransferTransaction) => void;\n  postUserTopUpTransactions: (payload: ITopUpTransaction) => void;\n}\n\nexport const useTransactionStore = create<TransactionState>((set) => ({\n  transaction: {} as ITransactions,\n  fetchUserTransaction: async () => {\n    console.log(localStorage.getItem(\"id_token\"));\n    let requestInstance = axios.create({\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"id_token\")}`,\n      },\n    });\n\n    try {\n      const response = await requestInstance.get(\n        \"http://localhost:8080/transactions\"\n      );\n      console.log(response);\n      set((state) => ({\n        userProfiles: (state = response.data.data.data),\n      }));\n    } catch (error) {}\n  },\n  transactionList: [],\n  fetchUserTransactions: async () => {\n    let requestInstance = axios.create({\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"id_token\")}`,\n      },\n    });\n\n    try {\n      const response = await requestInstance.get(\n        \"http://localhost:8080/transactions\"\n      );\n\n      set((state) => ({\n        transactionList: (state = response.data.data.data),\n      }));\n    } catch (error) {}\n  },\n\n  postUserTransferTransactions: async (payload: ITransferTransaction) => {\n    let requestInstance = axios.create({\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"id_token\")}`,\n      },\n    });\n\n    try {\n      const response = await requestInstance.post(\n        \"http://localhost:8080/transactions/transfer\",\n        {\n          to: payload.to,\n          amount: parseInt(payload.amount.toString()),\n          description: payload.description,\n        }\n      );\n      console.log(response);\n    } catch (error) {\n      console.log(error);\n    }\n  },\n  topUpResponse: {} as ITopUp,\n  postUserTopUpTransactions: async (payload: ITopUpTransaction) => {\n    let requestInstance = axios.create({\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"id_token\")}`,\n      },\n    });\n\n    try {\n      const response = await requestInstance.post(\n        \"http://localhost:8080/transactions/top-up\",\n        {\n          amount: payload.amount,\n          source_of_fund_id: payload.source_of_fund_id,\n        }\n      );\n      console.log(response.data);\n      set((state) => ({\n        topUpResponse: (state = response.data.data),\n      }));\n    } catch (error) {\n      console.log(error);\n      alert(\"Invalid amount (min. 50000)\");\n    }\n  },\n  userProfiles: {} as IProfiles,\n  fetchUserProfiles: async () => {\n    console.log(localStorage.getItem(\"id_token\"));\n    let requestInstance = axios.create({\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"id_token\")}`,\n      },\n    });\n\n    try {\n      const response = await requestInstance.get(\n        \"https://localhost:8080/api/user/profile\"\n      );\n      console.log(response);\n      set((state) => ({\n        userProfiles: (state = response.data.data),\n      }));\n    } catch (error) {}\n  },\n}));\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}